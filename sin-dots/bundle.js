!function(){"use strict";var t=function(){function t(t,i){this.halfWidth=0,this.halfHeight=0,this.canvas=t,this.ctx=i,this.updateCanvasDimensions(),this.boundResizeListener=this.updateCanvasDimensions.bind(this),window.addEventListener("resize",this.boundResizeListener)}return t.prototype.updateCanvasDimensions=function(){var t=this.canvas.getBoundingClientRect();this.canvas.width=t.width,this.canvas.height=t.height,this.halfWidth=t.width/2,this.halfHeight=t.height/2},t.prototype.dot=function(t,i,n){this.ctx.beginPath(),this.ctx.arc((t+1)*this.halfWidth,(i+1)*this.halfHeight,n,0,2*Math.PI),this.ctx.fill()},t.prototype.clear=function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)},t}(),i=Math.sin,n=function(){function t(t){var i=this;this.columns=30,this.rows=20,this.minRadius=1,this.maxRadius=3.3,this.pointRows=[],this.render=t;for(var n=0;n<this.rows;n+=1){for(var s=n/(this.rows-1),e=[],a=2*s-1,o=s*(this.maxRadius-this.minRadius)+this.minRadius,h=0;h<this.columns;h+=1){var r=h/(this.columns-1);e.push({x:2*r-1,y:0,phaseShift:10*r})}this.pointRows.push({points:e,yOffset:a,amplitude:.12,radius:o})}var c=function(){i.updatePoints(.002*performance.now()),i.draw(),window.requestAnimationFrame(c)};c()}return t.prototype.updatePoints=function(t){this.pointRows.forEach((function(n){n.points.forEach((function(s){s.y=i(t+s.phaseShift)*n.amplitude}))}))},t.prototype.draw=function(){var t=this;this.render.clear(),this.pointRows.forEach((function(i){i.points.forEach((function(n){var s=n.x,e=n.y;t.render.dot(s,e+i.yOffset,i.radius)}))}))},t}();!function(){var i=document.getElementById("c");if(null!==i)if(i instanceof HTMLCanvasElement){var s=i.getContext("2d");if(null!==s){var e=new t(i,s);new n(e)}else console.error("Cannot get 2d context")}else console.error("Element is not a canvas");else console.error("Cannot find canvas element")}()}();
//# sourceMappingURL=bundle.js.map
